package greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.xiuyuan.vnews.db.VNewsEntity;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "vnews".
*/
public class VNewsEntityDao extends AbstractDao<VNewsEntity, Long> {

    public static final String TABLENAME = "vnews";

    /**
     * Properties of entity VNewsEntity.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property VnewsType = new Property(1, String.class, "vnewsType", false, "idx_news_type");
        public final static Property VnewsTitle = new Property(2, String.class, "vnewsTitle", false, "idx_title");
        public final static Property VnewsShortContent = new Property(3, String.class, "vnewsShortContent", false, "idx_short_content");
        public final static Property VnewsImgUrl = new Property(4, String.class, "vnewsImgUrl", false, "img_url");
        public final static Property VnewsImgExtra = new Property(5, String.class, "vnewsImgExtra", false, "img_extra");
        public final static Property VnewsResouce = new Property(6, String.class, "vnewsResouce", false, "news_resouce");
        public final static Property VnewsDocId = new Property(7, String.class, "vnewsDocId", false, "uk_docid");
        public final static Property VnewsRelativeKey = new Property(8, String.class, "vnewsRelativeKey", false, "relative_key");
        public final static Property VnewsBody = new Property(9, String.class, "vnewsBody", false, "idx_body");
        public final static Property VnewsEditor = new Property(10, String.class, "vnewsEditor", false, "editor");
        public final static Property VnewsCreate = new Property(11, java.util.Date.class, "vnewsCreate", false, "gmt_create");
        public final static Property VnewsModified = new Property(12, java.util.Date.class, "vnewsModified", false, "gmt_modified");
    }

    private DaoSession daoSession;


    public VNewsEntityDao(DaoConfig config) {
        super(config);
    }
    
    public VNewsEntityDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
        this.daoSession = daoSession;
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"vnews\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"idx_news_type\" TEXT NOT NULL ," + // 1: vnewsType
                "\"idx_title\" TEXT NOT NULL ," + // 2: vnewsTitle
                "\"idx_short_content\" TEXT NOT NULL ," + // 3: vnewsShortContent
                "\"img_url\" TEXT NOT NULL ," + // 4: vnewsImgUrl
                "\"img_extra\" TEXT," + // 5: vnewsImgExtra
                "\"news_resouce\" TEXT NOT NULL ," + // 6: vnewsResouce
                "\"uk_docid\" TEXT NOT NULL UNIQUE ," + // 7: vnewsDocId
                "\"relative_key\" TEXT," + // 8: vnewsRelativeKey
                "\"idx_body\" TEXT NOT NULL ," + // 9: vnewsBody
                "\"editor\" TEXT," + // 10: vnewsEditor
                "\"gmt_create\" INTEGER NOT NULL ," + // 11: vnewsCreate
                "\"gmt_modified\" INTEGER NOT NULL );"); // 12: vnewsModified
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"vnews\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, VNewsEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getVnewsType());
        stmt.bindString(3, entity.getVnewsTitle());
        stmt.bindString(4, entity.getVnewsShortContent());
        stmt.bindString(5, entity.getVnewsImgUrl());
 
        String vnewsImgExtra = entity.getVnewsImgExtra();
        if (vnewsImgExtra != null) {
            stmt.bindString(6, vnewsImgExtra);
        }
        stmt.bindString(7, entity.getVnewsResouce());
        stmt.bindString(8, entity.getVnewsDocId());
 
        String vnewsRelativeKey = entity.getVnewsRelativeKey();
        if (vnewsRelativeKey != null) {
            stmt.bindString(9, vnewsRelativeKey);
        }
        stmt.bindString(10, entity.getVnewsBody());
 
        String vnewsEditor = entity.getVnewsEditor();
        if (vnewsEditor != null) {
            stmt.bindString(11, vnewsEditor);
        }
        stmt.bindLong(12, entity.getVnewsCreate().getTime());
        stmt.bindLong(13, entity.getVnewsModified().getTime());
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, VNewsEntity entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getVnewsType());
        stmt.bindString(3, entity.getVnewsTitle());
        stmt.bindString(4, entity.getVnewsShortContent());
        stmt.bindString(5, entity.getVnewsImgUrl());
 
        String vnewsImgExtra = entity.getVnewsImgExtra();
        if (vnewsImgExtra != null) {
            stmt.bindString(6, vnewsImgExtra);
        }
        stmt.bindString(7, entity.getVnewsResouce());
        stmt.bindString(8, entity.getVnewsDocId());
 
        String vnewsRelativeKey = entity.getVnewsRelativeKey();
        if (vnewsRelativeKey != null) {
            stmt.bindString(9, vnewsRelativeKey);
        }
        stmt.bindString(10, entity.getVnewsBody());
 
        String vnewsEditor = entity.getVnewsEditor();
        if (vnewsEditor != null) {
            stmt.bindString(11, vnewsEditor);
        }
        stmt.bindLong(12, entity.getVnewsCreate().getTime());
        stmt.bindLong(13, entity.getVnewsModified().getTime());
    }

    @Override
    protected final void attachEntity(VNewsEntity entity) {
        super.attachEntity(entity);
        entity.__setDaoSession(daoSession);
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public VNewsEntity readEntity(Cursor cursor, int offset) {
        VNewsEntity entity = new VNewsEntity( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getString(offset + 1), // vnewsType
            cursor.getString(offset + 2), // vnewsTitle
            cursor.getString(offset + 3), // vnewsShortContent
            cursor.getString(offset + 4), // vnewsImgUrl
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // vnewsImgExtra
            cursor.getString(offset + 6), // vnewsResouce
            cursor.getString(offset + 7), // vnewsDocId
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // vnewsRelativeKey
            cursor.getString(offset + 9), // vnewsBody
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // vnewsEditor
            new java.util.Date(cursor.getLong(offset + 11)), // vnewsCreate
            new java.util.Date(cursor.getLong(offset + 12)) // vnewsModified
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, VNewsEntity entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setVnewsType(cursor.getString(offset + 1));
        entity.setVnewsTitle(cursor.getString(offset + 2));
        entity.setVnewsShortContent(cursor.getString(offset + 3));
        entity.setVnewsImgUrl(cursor.getString(offset + 4));
        entity.setVnewsImgExtra(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setVnewsResouce(cursor.getString(offset + 6));
        entity.setVnewsDocId(cursor.getString(offset + 7));
        entity.setVnewsRelativeKey(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setVnewsBody(cursor.getString(offset + 9));
        entity.setVnewsEditor(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setVnewsCreate(new java.util.Date(cursor.getLong(offset + 11)));
        entity.setVnewsModified(new java.util.Date(cursor.getLong(offset + 12)));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(VNewsEntity entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(VNewsEntity entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(VNewsEntity entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
